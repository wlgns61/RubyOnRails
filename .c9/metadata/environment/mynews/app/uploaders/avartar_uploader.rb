{"changed":true,"filter":false,"title":"avartar_uploader.rb","tooltip":"/mynews/app/uploaders/avartar_uploader.rb","value":"class AvatarUploader < CarrierWave::Uploader::Base\n  # Include RMagick or MiniMagick support:\n  # include CarrierWave::RMagick\n  # include CarrierWave::MiniMagick\n\n  # Choose what kind of storage to use for this uploader:\n  storage :file\n  # storage :fog\n\n  # Override the directory where uploaded files will be stored.\n  # This is a sensible default for uploaders that are meant to be mounted:\n  def store_dir\n    \"uploads/#{model.class.to_s.underscore}/#{mounted_as}/#{model.id}\"\n  end\n\n  # Provide a default URL as a default if there hasn't been a file uploaded:\n  # def default_url(*args)\n  #   # For Rails 3.1+ asset pipeline compatibility:\n  #   # ActionController::Base.helpers.asset_path(\"fallback/\" + [version_name, \"default.png\"].compact.join('_'))\n  #\n  #   \"/images/fallback/\" + [version_name, \"default.png\"].compact.join('_')\n  # end\n\n  # Process files as they are uploaded:\n  # process scale: [200, 300]\n  #\n  # def scale(width, height)\n  #   # do something\n  # end\n\n  # Create different versions of your uploaded files:\n  # version :thumb do\n  #   process resize_to_fit: [50, 50]\n  # end\n\n  # Add a white list of extensions which are allowed to be uploaded.\n  # For images you might use something like this:\n  # def extension_whitelist\n  #   %w(jpg jpeg gif png)\n  # end\n\n  # Override the filename of the uploaded files:\n  # Avoid using model.id or version_name here, see uploader/store.rb for details.\n  # def filename\n  #   \"something.jpg\" if original_filename\n  # end\nend\n","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"remove","lines":["r"],"id":2}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":9},"end":{"row":0,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1592368228871}